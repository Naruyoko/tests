delete reducednames;reducednames=(function (rootobj){function reqlen(x,y,z){if(!!x+!!y+!!z==1)return 1;if(!x)return reqlen(y,z);if(!y)return reqlen(x,z);if(z)return Math.max(reqlen(x,y),reqlen(y,z));for(var i=1;x[i]===y[i]&&i<x.length&&i<y.length;i++);return i}var shallowmap=new Map();function newmap(obj){if(shallowmap.has(obj)){return shallowmap.get(obj)}else{var map=new Map();shallowmap.set(obj,map);return map}}function abbmap(obj){if(shallowmap.has(obj))return shallowmap.get(obj);var r=newmap(obj);var keys=Object.getOwnPropertyNames(obj);keys.sort();for(var i=0;i<keys.length;i++){try{obj[keys[i]]}catch(e){keys.splice(i--,1)}}for(var i=0;i<keys.length;i++){var key=keys[i];var entry=obj[key];var l=reqlen(keys[i-1],key,keys[i+1]);var id=key.slice(0,l+1);if(entry instanceof Object){r.set(id,abbmap(entry))}else{r.set(id,entry)}}return r}function abbname(propname,obj){if(obj===undefined)obj=rootobj;var proppath=propname.split(".");var r=[];for(var i=0;i<proppath.length;i++){var map=shallowmap.get(obj);var prop=proppath[i];for(var l=1;!map.has(prop.slice(0,l))&&l<prop.length;l++);r.push(prop.slice(0,l));obj=obj[prop]};return r}return [abbmap(rootobj),shallowmap,abbname]})(window);setTimeout(function(){console.log(reducednames)},0)